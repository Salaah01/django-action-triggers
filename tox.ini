[tox]
envlist = 
    # Django 5.1 for Python 3.10+
    py{310,311,312}-django51-{postgres,mysql,sqlite}-{rabbitmq,kafka},
    # Django 3.2 and 4.2 for Python 3.8+ 
    py{38,39,310,311,312}-django{32,42}-{postgres,mysql,sqlite}-{rabbitmq,kafka}
isolated_build = True
ignore_basepython_conflict = true

[testenv]
deps =
  django32: Django>=3.2,<4.0
  django42: Django>=4.2,<5.0
  django51: Django>=5.1,<6.0
  aiohttp
  model_bakery
  aioresponses
  pytest-asyncio
  pytest-django

commands = pytest {posargs}
setenv =
    DJANGO_SETTINGS_MODULE = tests.settings
    PYTHONPATH = {toxinidir}:{envsitepackagesdir}
allowlist_externals =
    pytest

[testenv:postgres]
description = Test against PostgreSQL
deps =
  {[testenv]deps}
  psycopg2
setenv =
    DB_ENGINE = django.db.backends.postgresql
    DB_NAME = action_triggers
    DB_USER = postgres
    DB_PASSWORD = postgres
    DB_HOST = localhost
    DB_PORT = 5440

[testenv:mysql]
description = Test against MySQL
deps =
  {[testenv]deps}
  mysqlclient
setenv =
    DB_ENGINE = django.db.backends.mysql
    DB_NAME = action_triggers
    DB_USER = root
    DB_PASSWORD = root
    DB_HOST = 127.0.0.1
    DB_PORT = 3307

[testenv:sqlite]
description = Test against SQLite
deps =
  {[testenv]deps}
setenv =
    DB_ENGINE = django.db.backends.sqlite3
    DB_NAME = :memory:

[testenv:rabbitmq]
description = Test against RabbitMQ
deps =
  {[testenv]deps}
  aio_pika
setenv =
    RABBIT_MQ_HOST = localhost
    RABBIT_MQ_PORT = 5680

[testenv:kafka]
description = Test against Kafka
deps =
  {[testenv]deps}
    aiokafka
setenv =
  KAFKA_CONN_DETAILS = {"bootstrap_servers": "localhost:9092"}

# Combined environments for PostgreSQL and RabbitMQ
[testenv:py{38,39,310,311,312}-django{32,42}-postgres-rabbitmq, py{310,311,312}-django51-postgres-rabbitmq]
description = Test against PostgreSQL with RabbitMQ
deps =
    {[testenv:postgres]deps}
    {[testenv:rabbitmq]deps}
setenv =
    {[testenv:postgres]setenv}
    {[testenv:rabbitmq]setenv}

# Combined environments for PostgreSQL and Kafka
[testenv:py{38,39,310,311,312}-django{32,42}-postgres-kafka, py{310,311,312}-django51-postgres-kafka]
description = Test against PostgreSQL with Kafka
deps =
    {[testenv:postgres]deps}
    {[testenv:kafka]deps}
setenv =
    {[testenv:postgres]setenv}
    {[testenv:kafka]setenv}

# Combined environments for MySQL and RabbitMQ
[testenv:py{38,39,310,311,312}-django{32,42}-mysql-rabbitmq, py{310,311,312}-django51-mysql-rabbitmq]
description = Test against MySQL with RabbitMQ
deps =
    {[testenv:mysql]deps}
    {[testenv:rabbitmq]deps}
setenv =
    {[testenv:mysql]setenv}
    {[testenv:rabbitmq]setenv}

# Combined environments for MySQL and Kafka
[testenv:py{38,39,310,311,312}-django{32,42}-mysql-kafka, py{310,311,312}-django51-mysql-kafka]
description = Test against MySQL with Kafka
deps =
    {[testenv:mysql]deps}
    {[testenv:kafka]deps}
setenv =
    {[testenv:mysql]setenv}
    {[testenv:kafka]setenv}

# Combined environments for SQLite and RabbitMQ
[testenv:py{38,39,310,311,312}-django{32,42}-sqlite-rabbitmq, py{310,311,312}-django51-sqlite-rabbitmq]
description = Test against SQLite with RabbitMQ
deps =
    {[testenv:sqlite]deps}
    {[testenv:rabbitmq]deps}
setenv =
    {[testenv:sqlite]setenv}
    {[testenv:rabbitmq]setenv}

# Combined environments for SQLite and Kafka
[testenv:py{38,39,310,311,312}-django{32,42}-sqlite-kafka, py{310,311,312}-django51-sqlite-kafka]
description = Test against SQLite with Kafka
deps =
    {[testenv:sqlite]deps}
    {[testenv:kafka]deps}
setenv =
    {[testenv:sqlite]setenv}
    {[testenv:kafka]setenv}
