name: CI Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  setup:
    runs-on: [self-hosted, ubuntu-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Compose
        run: docker compose up -d --wait

  test:
    needs: setup
    runs-on: [self-hosted, ubuntu-latest]
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
        django-version: [32, 42, 51]
        db: [postgres, mysql, sqlite]
        action: [rabbitmq, kafka, redis, aws]
        exclude:
          # Django 5.1 does not support Python <3.10
          - python-version: "3.8"
            django-version: 51
          - python-version: "3.9"
            django-version: 51

    env:
      DJANGO_SETTINGS_MODULE: tests.settings
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox

      - name: Run tests with Tox
        run: |
          tox -e py${{ matrix.python-version }}-django${{ matrix.django-version }}-${{ matrix.db }}-${{ matrix.action }}

  type-check:
    needs: setup
    runs-on: [self-hosted, ubuntu-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: make ci-install-deps-global
      - name: Run type checks
        run: |
          make type-check

  lint:
    needs: setup
    runs-on: [self-hosted, ubuntu-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: make ci-install-deps-global

      - name: Run linter
        run: |
          make lint
