# A dedicated docker-comopose file for bringing up all the services for tox
# to test against.

version: '3.8'

services:
  postgres:
    image: postgres:14.13-alpine3.20
    environment:
      POSTGRES_DB: action_triggers
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5440:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

  mysql:
    image: mysql:oraclelinux9
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: action_triggers
      MYSQL_PASSWORD: root
    ports:
      - "3307:3306"
    healthcheck:
      test: [ "CMD-SHELL", "mysqladmin ping -h localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

  rabbitmq:
    image: rabbitmq:4.0.0-beta.5-management-alpine
    ports:
      - "5680:5672"
      - "15680:15672"
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    healthcheck:
      test: [ "CMD", "bash", "-c", "echo > /dev/tcp/localhost/2181" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

  kafka:
    image: confluentinc/cp-kafka:7.4.4
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    ports:
      - "9092:9092"
      - "29092:29092"
    depends_on:
      zookeeper:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "bash", "-c", "echo > /dev/tcp/localhost/9092" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

  redis:
    image: redis:7.4.0-alpine
    ports:
      - "6379:6379"
    restart: always

  localstack:
    # It's unconventional to use the latest tag, but we are using localstack
    # to emulate AWS services, and it's possible that the latest tag is the
    # most up-to-date version of the AWS API.
    image: localstack/localstack
    container_name: "${LOCALSTACK_DOCKER_NAME:-localstack-main}"
    ports:
      - "4566:4566" # LocalStack Gateway
      - "4510-4559:4510-4559" # external services port range
    environment:
      # LocalStack configuration: https://docs.localstack.cloud/references/configuration/
      - DEBUG=1
    volumes:
      - "${LOCALSTACK_VOLUME_DIR:-./volume/localstack}:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./localstack/files:/root/files"
      - "./localstack/init_hooks:/etc/localstack/init"
    restart: always
