[tool.poetry]
name = "django-action-triggers"
version = "0.5.1"
description = "A Django library for asynchronously triggering actions in response to database changes. It supports integration with webhooks, message brokers (e.g., Kafka, RabbitMQ), and can trigger other processes, including AWS Lambda functions."
authors = ["Salaah Amin <salaah01@users.noreply.github.com>"]
readme = "README.md"
license = "MIT"
homepage = "https://github.com/Salaah01/django-action-triggers"
repository = "https://github.com/Salaah01/django-action-triggers"
documentation = "https://django-action-triggers.readthedocs.io/en/latest/"
packages = [{ include = "action_triggers" }]

classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "Environment :: Web Environment",
  "Framework :: Django",
  "Framework :: Django :: 3.2",
  "Framework :: Django :: 4.2",
  "Framework :: Django :: 5.0",
  "Framework :: Django :: 5.1",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]
keywords = [
  "django",
  "signals",
  "actions",
  "triggers",
  "webhooks",
  "kafka",
  "rabbitmq",
  "async",
  "asyncio",
  "aiohttp",
  "aiokafka",
  "aio-pika",
  "message-broker",
  "message-queue",
  "message-bus",
  "pubsub",
  "event-driven",
  "event-driven",
]

[tool.ruff]
line-length = 79

[tool.isort]
profile = "black"
line_length = 79

[tool.pytest]
env = ["DJANGO_SETTINGS_MODULE = tests.settings"]

[tool.coverage.report]
include = ["action_triggers/*"]
omit = ["action_triggers/migrations/*"]

[tool.poetry.dependencies]
python = ">=3.8,<3.13"
django = ">=3.2,<5.1"
djangorestframework = "^3.15.2"
psycopg2 = { version = "^2.9.9", optional = true }
aio-pika = { version = "^9.4.3", optional = true }
aiokafka = { version = "^0.11.0", optional = true }
redis = { version = "^5.0.8", optional = true }
aiohttp = { version = "^3.10.5", optional = true }
boto3 = { version = "^1.35.12", optional = true }
google-cloud-pubsub = { version = "^2.25.2", optional = true }

[tool.mypy]
plugins = ["mypy_django_plugin.main"]
exclude = ["action_triggers/migrations", "docs", "venv"]

[tool.django-stubs]
django_settings_module = "tests.settings"

[tool.poetry.group.dev.dependencies]
tox = "^4.17.1"
ruff = ">=0.5.7,<0.7.0"
isort = "^5.13.2"
pytest = "^8.3.2"
pytest-cov = "^5.0.0"
coverage = "^7.6.1"
django-coverage-plugin = "^3.1.0"
model-bakery = "^1.19.1"
mypy = "^1.11.1"
django-stubs = "^5.0.4"
psycopg2 = "^2.9.9"
pytest-asyncio = ">=0.23.8,<0.25.0"
aioresponses = "^0.7.6"
pytest-django = "^4.8.0"


[tool.poetry.group.webhooks.dependencies]
aiohttp = "^3.10.5"


[tool.poetry.group.kafka.dependencies]
aiokafka = "^0.11.0"


[tool.poetry.group.rabbitmq.dependencies]
aio-pika = "^9.4.3"


[tool.poetry.group.redis.dependencies]
redis = "^5.0.8"


[tool.poetry.group.aws.dependencies]
localstack = "^3.7.1"
boto3 = "^1.35.12"


[tool.poetry.group.gcp.dependencies]
google-cloud-pubsub = "^2.25.2"

[tool.poetry.extras]
postgres = ["psycopg2"]
rabbitmq = ["aio-pika"]
kafka = ["aiokafka"]
redis = ["redis"]
webhooks = ["aiohttp"]
aws = ["boto3"]
gcp = ["google-cloud-pubsub"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
